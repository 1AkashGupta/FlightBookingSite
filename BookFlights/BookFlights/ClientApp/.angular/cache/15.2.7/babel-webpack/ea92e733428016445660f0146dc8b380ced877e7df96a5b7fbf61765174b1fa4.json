{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api/services\";\nexport class BookFlightComponent {\n  constructor(route, router, flightService) {\n    this.route = route;\n    this.router = router;\n    this.flightService = flightService;\n    this.flightId = 'not loaded';\n    this.flight = {};\n    this.findFlight = flightId => {\n      this.flightId = flightId ?? 'not passed';\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(r => this.findFlight(r.get(\"flightId\")));\n  }\n  handleError(err) {\n    if (err.status == 404) {\n      alert(\"Flight not found\");\n    }\n    console.log(\"Response Error. Status: \" + err.status);\n    console.log(\"Response Error. Status Trxt: \" + err.statusText);\n  }\n}\nBookFlightComponent.ɵfac = function BookFlightComponent_Factory(t) {\n  return new (t || BookFlightComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FlightService));\n};\nBookFlightComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookFlightComponent,\n  selectors: [[\"app-book-flight\"]],\n  decls: 2,\n  vars: 0,\n  template: function BookFlightComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"book-flight works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,mBAAmB;EAE9BC,YAAoBC,KAAqB,EAC/BC,MAAc,EACdC,aAA4B;IAFlB,UAAK,GAALF,KAAK;IACf,WAAM,GAANC,MAAM;IACN,kBAAa,GAAbC,aAAa;IAEvB,aAAQ,GAAU,YAAY;IAC9B,WAAM,GAAa,EAAE;IAOb,eAAU,GAAIC,QAAuB,IAAI;MAC/C,IAAI,CAACA,QAAQ,GAAGA,QAAQ,IAAI,YAAY;IAC1C,CAAC;EAZyC;EAK1CC,QAAQ;IACN,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAChBC,SAAS,CAACC,CAAC,IAAI,IAAI,CAACC,UAAU,CAACD,CAAC,CAACE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;EACvD;EAMQC,WAAW,CAACC,GAAQ;IAC1B,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBC,KAAK,CAAC,kBAAkB,CAAC;;IAE3BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGJ,GAAG,CAACC,MAAM,CAAC;IACpDE,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAACJ,GAAG,CAACK,UAAU,CAAC;EAC7D;;AAxBWlB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAmB;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI","names":["BookFlightComponent","constructor","route","router","flightService","flightId","ngOnInit","paramMap","subscribe","r","findFlight","get","handleError","err","status","alert","console","log","statusText","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\panna\\Source\\repos\\FlightBookingSite\\BookFlights\\BookFlights\\ClientApp\\src\\app\\book-flight\\book-flight.component.ts","C:\\Users\\panna\\Source\\repos\\FlightBookingSite\\BookFlights\\BookFlights\\ClientApp\\src\\app\\book-flight\\book-flight.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FlightRm } from '../api/models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FlightService } from '../api/services';\r\n\n@Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})\nexport class BookFlightComponent implements OnInit{\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private flightService: FlightService) { }\r\n\r\n  flightId:string = 'not loaded'\r\n  flight: FlightRm = {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n      .subscribe(r => this.findFlight(r.get(\"flightId\")))\r\n  }\n\n  private findFlight = (flightId: string | null) => {\n    this.flightId = flightId ?? 'not passed'\r\n  }\n\n  private handleError(err: any) {\n    if (err.status == 404) {\r\n      alert(\"Flight not found\")\r\n    }\r\n    console.log(\"Response Error. Status: \" + err.status)\r\n    console.log(\"Response Error. Status Trxt: \"+err.statusText)\r\n  }\n\n}\n","<p>book-flight works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}